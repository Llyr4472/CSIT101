[{"title":"C-Programming Lab Assignment 1","url":"/CSIT/Semester-1/CSIT/C-Programming/Assignment/","content":"\n# Questions\n\n1. . Write a C program to print your name, date of birth and mobile number and Name of\nCollege using printf() and puts() functions in following format.\nName: ……\nDOB:\nMobileNO:\nCampus:\n\n2. Write a C program to display size in bytes of different data types using sizeof() operator.\n\n3. Write algorithm, flow-chart and program to compute the area and circumference of a circle with given radius r as input defining π as constant.\n\n4. Write a C program to convert specified no of days into years, weeks and days. (Note: Ignore leap year.)\n\n5. Write a C program that accepts two integers from the user as input and calculates the sum, difference, product, quotient and remainder applying different arithmetic operators between two integers.\n\n6. Write algorithm pseudo-code as well as draw flow chart to Compute the roots of the quadratic equation ax² + bx + c = 0 for given coefficient input a, b and c. Write C program.\n\n7. Write a C program to check a given integer is positive even, negative even, positive odd or negative odd.\n\n8. Write a C program to read the score of student and print the grade according to score as:\n   - Score >= 80: \"Distinction\"\n   - Score 70-79: \"First Division\"\n   - Score 55-69: \"Second Division\"\n   - Score 40-54: \"Third Division\"\n   - Score < 40: \"Fail\"\n\n9. Write a C program to find the sum of first 100 natural numbers using loop.\n\n10. Write a program in C to display the multiplication table of 1 to n where n is input number.\n\n11. Write algorithm and program to compute the followings using for, do while and while loop separately:\n    a. factorial of an integer N\n    b. computation of aᵇ (a raised to power b)\n\n12. Write a program in C to make such a pattern of asterisk(*) below using loop:\n    ```\n    *\n    * *\n    * * *\n    * * * *\n    ```\n    up to n lines where n is an integer\n\n13. Write a program using loop to print Floyd's triangle as given below when input is n:\n    ```\n    1\n    2 3\n    4 5 6\n    7 8 9 10\n    11 12 13 14\n    ```\n    up to n rows\n\n14. Write a program to get input of two 3x3 matrices and find out the sum and product of the matrices and display the result.\n\n15. Write a program to get a string as input and print the length of string, reverse of the string:\n    a. Using String Library Function\n    b. Using your own function\n\n16. Write a program that takes input of two numbers and any one operator (+,-,*,/,%) as input and pass those numbers and operator to a function. The function should calculate and return the result. Display the result of computation.\n\n17. Write a program defining an array with dynamic memory allocation of integers and compute the sum of the array using function.\n\n18. Write a program to swap two numbers defining a function swap().\n\n19. Write a program defining a structure to store student data (rollno, f_name, l_name, address, mobileno), input data for n students and display the record.\n\n20. Write a program to prompt user to input filename and read the content of file and display in screen.\n\n21. Write a program to read from a text file and count the number of lines and characters in that file.\n\n22. Write a program to read a text file and copy all contents in the new file.\n\n---\n\n# Solutions\n---\n\n### 1. **Print Name, DOB, Mobile Number, and Campus**\n**Code**: \n```c\n#include <stdio.h>\nint main() {\n    printf(\"Name: John Doe\\n\");\n    printf(\"DOB: 2000-01-01\\n\");\n    printf(\"Mobile No: 9800000000\\n\");\n    puts(\"Campus: Patan Multiple Campus\");\n    return 0;\n}\n```\n**Output**:\n```\nName: John Doe\nDOB: 2000-01-01\nMobile No: 9800000000\nCampus: Patan Multiple Campus\n```\n\n---\n\n### 2. **Display Size of Data Types**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    printf(\"Size of int: %lu bytes\\n\", sizeof(int));\n    printf(\"Size of float: %lu bytes\\n\", sizeof(float));\n    printf(\"Size of double: %lu bytes\\n\", sizeof(double));\n    printf(\"Size of char: %lu byte\\n\", sizeof(char));\n    return 0;\n}\n```\n**Output**:\n```\nSize of int: 4 bytes\nSize of float: 4 bytes\nSize of double: 8 bytes\nSize of char: 1 byte\n```\n\n---\n\n### 3. **Area and Circumference of Circle**\n**Code**:\n```c\n#include <stdio.h>\n#define PI 3.14159\nint main() {\n    float radius, area, circumference;\n    printf(\"Enter radius: \");\n    scanf(\"%f\", &radius);\n    area = PI * radius * radius;\n    circumference = 2 * PI * radius;\n    printf(\"Area: %.2f\\nCircumference: %.2f\\n\", area, circumference);\n    return 0;\n}\n```\n**Output**:\n```\nEnter radius: 5\nArea: 78.54\nCircumference: 31.42\n```\n\n---\n\n### 4. **Days to Years, Weeks, and Days**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int days, years, weeks, remaining_days;\n    printf(\"Enter days: \");\n    scanf(\"%d\", &days);\n    years = days / 365;\n    weeks = (days % 365) / 7;\n    remaining_days = days % 7;\n    printf(\"%d years, %d weeks, %d days\\n\", years, weeks, remaining_days);\n    return 0;\n}\n```\n**Output**:\n```\nEnter days: 400\n1 years, 5 weeks, 0 days\n```\n\n---\n\n### 5. **Arithmetic Operations**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int a, b;\n    printf(\"Enter two integers: \");\n    scanf(\"%d %d\", &a, &b);\n    printf(\"Sum: %d\\n\", a + b);\n    printf(\"Difference: %d\\n\", a - b);\n    printf(\"Product: %d\\n\", a * b);\n    printf(\"Quotient: %d\\n\", a / b);\n    printf(\"Remainder: %d\\n\", a % b);\n    return 0;\n}\n```\n**Output**:\n```\nEnter two integers: 10 3\nSum: 13\nDifference: 7\nProduct: 30\nQuotient: 3\nRemainder: 1\n```\n\n### 6. **Roots of Quadratic Equation**\n**Code**:\n```c\n#include <stdio.h>\n#include <math.h>\nint main() {\n    float a, b, c, discriminant, root1, root2;\n    printf(\"Enter coefficients a, b, and c: \");\n    scanf(\"%f %f %f\", &a, &b, &c);\n    discriminant = b * b - 4 * a * c;\n    if (discriminant > 0) {\n        root1 = (-b + sqrt(discriminant)) / (2 * a);\n        root2 = (-b - sqrt(discriminant)) / (2 * a);\n        printf(\"Roots: %.2f and %.2f\\n\", root1, root2);\n    } else if (discriminant == 0) {\n        root1 = -b / (2 * a);\n        printf(\"Root: %.2f\\n\", root1);\n    } else {\n        printf(\"No real roots.\\n\");\n    }\n    return 0;\n}\n```\n**Output**:\n```\nEnter coefficients a, b, and c: 1 -3 2\nRoots: 2.00 and 1.00\n```\n\n---\n\n### 7. **Check Integer Type**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int num;\n    printf(\"Enter an integer: \");\n    scanf(\"%d\", &num);\n    if (num > 0 && num % 2 == 0)\n        printf(\"Positive Even\\n\");\n    else if (num > 0)\n        printf(\"Positive Odd\\n\");\n    else if (num < 0 && num % 2 == 0)\n        printf(\"Negative Even\\n\");\n    else\n        printf(\"Negative Odd\\n\");\n    return 0;\n}\n```\n**Output**:\n```\nEnter an integer: -4\nNegative Even\n```\n\n---\n\n### 8. **Grade Calculation**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int score;\n    printf(\"Enter score: \");\n    scanf(\"%d\", &score);\n    if (score >= 80)\n        printf(\"Distinction\\n\");\n    else if (score >= 70)\n        printf(\"First Division\\n\");\n    else if (score >= 55)\n        printf(\"Second Division\\n\");\n    else if (score >= 40)\n        printf(\"Third Division\\n\");\n    else\n        printf(\"Fail\\n\");\n    return 0;\n}\n```\n**Output**:\n```\nEnter score: 75\nFirst Division\n```\n\n---\n\n### 9. **Sum of First 100 Natural Numbers**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int sum = 0;\n    for (int i = 1; i <= 100; i++)\n        sum += i;\n    printf(\"Sum: %d\\n\", sum);\n    return 0;\n}\n```\n**Output**:\n```\nSum: 5050\n```\n\n---\n\n### 10. **Multiplication Table of 1 to n**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int n;\n    printf(\"Enter n: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        printf(\"Table of %d:\\n\", i);\n        for (int j = 1; j <= 10; j++)\n            printf(\"%d x %d = %d\\n\", i, j, i * j);\n    }\n    return 0;\n}\n```\n**Output**:\n```\nEnter n: 2\nTable of 1:\n1 x 1 = 1\n1 x 2 = 2\n...\nTable of 2:\n2 x 1 = 2\n2 x 2 = 4\n...\n```\n\n---\n### 11. **Factorial and Power Calculation**\n**Factorial Using `for` Loop**:\n```c\n#include <stdio.h>\nint main() {\n    int n, factorial = 1;\n    printf(\"Enter n: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n        factorial *= i;\n    printf(\"Factorial: %d\\n\", factorial);\n    return 0;\n}\n```\n\n**Output**:\n```\nEnter n: 5\nFactorial: 120\n```\n\n**Power Calculation Using `while` Loop**:\n```c\n#include <stdio.h>\nint main() {\n    int base, exp, result = 1;\n    printf(\"Enter base and exponent: \");\n    scanf(\"%d %d\", &base, &exp);\n    while (exp-- > 0)\n        result *= base;\n    printf(\"Result: %d\\n\", result);\n    return 0;\n}\n```\n\n**Output**:\n```\nEnter base and exponent: 2 3\nResult: 8\n```\n\n---\n\n### 12. **Pattern of Asterisks**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int n;\n    printf(\"Enter number of lines: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= i; j++)\n            printf(\"* \");\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n**Output**:\n```\n*\n* *\n* * *\n...\n```\n\n---\n\n### 13. **Floyd's Triangle**\n**Code**:\n```c\n#include <stdio.h>\nint main() {\n    int n, num = 1;\n    printf(\"Enter number of rows: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= i; j++)\n            printf(\"%d \", num++);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n\n**Output**:\n```\nEnter number of rows: 4\n1 \n2 3 \n4 5 6 \n7 8 9 10\n```\n\n---\n\n### 14. **Matrix Sum and Product**\n**Code**:\n```c\n#include <stdio.h>\nvoid readMatrix(int matrix[3][3]) {\n    for (int i = 0; i < 3; i++)\n        for (int j = 0; j < 3; j++)\n            scanf(\"%d\", &matrix[i][j]);\n}\nvoid printMatrix(int matrix[3][3]) {\n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < 3; j++)\n            printf(\"%d \", matrix[i][j]);\n        printf(\"\\n\");\n    }\n}\nvoid addMatrices(int a[3][3], int b[3][3], int result[3][3]) {\n    for (int i = 0; i < 3; i++)\n        for (int j = 0; j < 3; j++)\n            result[i][j] = a[i][j] + b[i][j];\n}\nint main() {\n    int a[3][3], b[3][3], sum[3][3];\n    printf(\"Enter first matrix:\\n\");\n    readMatrix(a);\n    printf(\"Enter second matrix:\\n\");\n    readMatrix(b);\n    addMatrices(a, b, sum);\n    printf(\"Sum:\\n\");\n    printMatrix(sum);\n    return 0;\n}\n```\n\n**Output**:\n```\nEnter first matrix:\n1 2 3\n4 5 6\n7 8 9\nEnter second matrix:\n9 8 7\n6 5 4\n3 2 1\nSum:\n10 10 10\n10 10 10\n10 10 10\n```\n\n---\n### 15. **String Length and Reverse**\n**Program** *(Using String Library Functions)*:\n```c\n#include <stdio.h>\n#include <string.h>\nint main() {\n    char str[100];\n    printf(\"Enter a string: \");\n    gets(str);\n    printf(\"Length: %lu\\n\", strlen(str));\n    strrev(str);\n    printf(\"Reversed: %s\\n\", str);\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter a string: Nepal\nLength: 5\nReversed: lapeN\n```\n\n**Program** *(Without String Library Functions)*:\n```c\n#include <stdio.h>\nint stringLength(char str[]) {\n    int length = 0;\n    while (str[length] != '\\0')\n        length++;\n    return length;\n}\nvoid reverseString(char str[]) {\n    int len = stringLength(str);\n    for (int i = 0; i < len / 2; i++) {\n        char temp = str[i];\n        str[i] = str[len - i - 1];\n        str[len - i - 1] = temp;\n    }\n}\nint main() {\n    char str[100];\n    printf(\"Enter a string: \");\n    gets(str);\n    printf(\"Length: %d\\n\", stringLength(str));\n    reverseString(str);\n    printf(\"Reversed: %s\\n\", str);\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter a string: HelloWorld\nLength: 10\nReversed: dlroWolleH\n```\n\n---\n\n### 16. **Calculator Using Functions**\n**Program**:\n```c\n#include <stdio.h>\nfloat calculate(float a, float b, char op) {\n    switch (op) {\n        case '+': return a + b;\n        case '-': return a - b;\n        case '*': return a * b;\n        case '/': return a / b;\n        case '%': return (int)a % (int)b;\n        default: return 0;\n    }\n}\nint main() {\n    float num1, num2;\n    char op;\n    printf(\"Enter two numbers and an operator: \");\n    scanf(\"%f %f %c\", &num1, &num2, &op);\n    printf(\"Result: %.2f\\n\", calculate(num1, num2, op));\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter two numbers and an operator: 10 3 %\nResult: 1.00\n```\n\n---\n\n### 17. **Dynamic Memory Allocation and Sum of Array**\n**Program**:\n```c\n#include <stdio.h>\n#include <stdlib.h>\nint sumArray(int *arr, int size) {\n    int sum = 0;\n    for (int i = 0; i < size; i++)\n        sum += arr[i];\n    return sum;\n}\nint main() {\n    int n, *arr;\n    printf(\"Enter size of array: \");\n    scanf(\"%d\", &n);\n    arr = (int *)malloc(n * sizeof(int));\n    printf(\"Enter %d elements: \", n);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &arr[i]);\n    printf(\"Sum: %d\\n\", sumArray(arr, n));\n    free(arr);\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter size of array: 5\nEnter 5 elements: 1 2 3 4 5\nSum: 15\n```\n\n---\n\n### 18. **Swap Two Numbers Using a Function**\n**Program**:\n```c\n#include <stdio.h>\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\nint main() {\n    int x, y;\n    printf(\"Enter two numbers: \");\n    scanf(\"%d %d\", &x, &y);\n    swap(&x, &y);\n    printf(\"After swapping: x = %d, y = %d\\n\", x, y);\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter two numbers: 5 10\nAfter swapping: x = 10, y = 5\n```\n\n---\n\n### 19. **Structure for Student Data**\n**Program**:\n```c\n#include <stdio.h>\nstruct Student {\n    int rollno;\n    char fname[50], lname[50], address[100];\n    char mobileno[15];\n};\nint main() {\n    int n;\n    printf(\"Enter number of students: \");\n    scanf(\"%d\", &n);\n    struct Student students[n];\n    for (int i = 0; i < n; i++) {\n        printf(\"Enter details for student %d:\\n\", i + 1);\n        printf(\"Roll No: \");\n        scanf(\"%d\", &students[i].rollno);\n        printf(\"First Name: \");\n        scanf(\"%s\", students[i].fname);\n        printf(\"Last Name: \");\n        scanf(\"%s\", students[i].lname);\n        printf(\"Address: \");\n        scanf(\"%s\", students[i].address);\n        printf(\"Mobile No: \");\n        scanf(\"%s\", students[i].mobileno);\n    }\n    printf(\"Student Records:\\n\");\n    for (int i = 0; i < n; i++) {\n        printf(\"Roll No: %d, Name: %s %s, Address: %s, Mobile No: %s\\n\",\n               students[i].rollno, students[i].fname, students[i].lname,\n               students[i].address, students[i].mobileno);\n    }\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter number of students: 1\nEnter details for student 1:\nRoll No: 1\nFirst Name: Prashant\nLast Name: Giri\nAddress: Kathmandu\nMobile No: 9876543210\nStudent Records:\nRoll No: 1, Name: Prashant Giri, Address: Kathmandu, Mobile No: 9876543210\n```\n\n---\n\n### 20. **Read and Display File Content**\n**Program**:\n```c\n#include <stdio.h>\nint main() {\n    char filename[50], ch;\n    printf(\"Enter filename: \");\n    scanf(\"%s\", filename);\n    FILE *file = fopen(filename, \"r\");\n    if (file == NULL) {\n        printf(\"File not found.\\n\");\n        return 1;\n    }\n    while ((ch = fgetc(file)) != EOF)\n        putchar(ch);\n    fclose(file);\n    return 0;\n}\n```\n\n**Sample Input/Output** *(assuming file contains \"Hello World\")*:\n```\nEnter filename: input.txt\nHello World\n```\n\n---\n\n### 21. **Count Lines and Characters in File**\n**Program**:\n```c\n#include <stdio.h>\nint main() {\n    char filename[50], ch;\n    int lines = 0, chars = 0;\n    printf(\"Enter filename: \");\n    scanf(\"%s\", filename);\n    FILE *file = fopen(filename, \"r\");\n    if (file == NULL) {\n        printf(\"File not found.\\n\");\n        return 1;\n    }\n    while ((ch = fgetc(file)) != EOF) {\n        chars++;\n        if (ch == '\\n')\n            lines++;\n    }\n    fclose(file);\n    printf(\"Lines: %d, Characters: %d\\n\", lines, chars);\n    return 0;\n}\n```\n\n**Sample Input/Output** *(assuming file contains two lines \"Hello\\nWorld\")*:\n```\nEnter filename: input.txt\nLines: 2, Characters: 11\n```\n\n---\n\n### 22. **Copy Content to New File**\n**Program**:\n```c\n#include <stdio.h>\nint main() {\n    char src[50], dest[50], ch;\n    printf(\"Enter source filename: \");\n    scanf(\"%s\", src);\n    printf(\"Enter destination filename: \");\n    scanf(\"%s\", dest);\n    FILE *srcFile = fopen(src, \"r\");\n    FILE *destFile = fopen(dest, \"w\");\n    if (srcFile == NULL || destFile == NULL) {\n        printf(\"File error.\\n\");\n        return 1;\n    }\n    while ((ch = fgetc(srcFile)) != EOF)\n        fputc(ch, destFile);\n    printf(\"File copied successfully.\\n\");\n    fclose(srcFile);\n    fclose(destFile);\n    return 0;\n}\n```\n\n**Sample Input/Output**:\n```\nEnter source filename: input.txt\nEnter destination filename: output.txt\nFile copied successfully.\n```\n\nLet me know if there are any errors.\n","tags":["Assignment","C-Programming","Lab"],"categories":["CSIT","Semester 1"]},{"title":"Digital Logic Notes - CSIT Semester 1","url":"/Study-Materials/CSIT/Semester-1/CSIT/Digital-Logic/Notes/","content":"\n# Digital Logic Notes - CSIT Semester 1\n\n## Unit 1: Digital Signals and Waveforms\nHere are the notes for **[Digital Signals and Waveforms](/downloads/CSIT/Sem1/Digital-Logic/Unit-1.pdf)**, compiled by **Er. Sachita Nand Mishra**. This unit introduces digital signals and their characteristics. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/Digital-Logic/Unit-1.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit focuses on understanding digital signals and waveforms, including their characteristics, advantages, and examples like square, triangular, and sinusoidal waveforms.\n\n---\n\n## Unit 2: Boolean Algebra and Logic Gates\nHere are the notes for **[Boolean Algebra and Logic Gates](/downloads/CSIT/Sem1/Digital-Logic/Unit-2.pdf)**, compiled by **Er. Sachita Nand Mishra**. This unit explores Boolean algebra and the fundamental logic gates used in digital circuits. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/Digital-Logic/Unit-2.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers the basics of Boolean algebra, including its rules and applications, as well as AND, OR, NOT, NAND, NOR, XOR, and XNOR gates. It also includes truth tables and practical applications of these gates in digital systems.\n\n---\n\n---\n## Unit-6: Synchronous and Asynchronous Sequential Circuit\n\nHere are the notes for **[Synchronous and Asynchronous Sequential Circuit](/downloads/CSIT/Sem1/Digital-Logic/Unit-6.pdf)**, compiled by **Er. Sachita Nand Mishra**. This unit explores the concepts of synchronous and asynchronous sequential circuits, including their characteristics and applications. You can view the full PDF below:\n\n<iframe\n    src=\"/downloads/CSIT/Sem1/Digital-Logic/Unit-6.pdf\"\n    width=\"100%\"\n    height=\"600px\">\n</iframe>\n\n**Description**:\nThis unit covers the concepts of synchronous and asynchronous sequential circuits, including their characteristics and applications. It also discusses the difference between these two types of circuits and their uses in digital systems.\n\n### About the Notes\nCompiled by **Er. Sachita Nand Mishra** for B.Sc. CSIT Semester 1 students, these notes aim to provide clear explanations of foundational concepts in digital logic.\n\n","tags":["CSIT","Semester 1","Notes","Digital Logic"],"categories":["Study Materials","CSIT","Semester 1"]},{"title":"IIT Notes - CSIT Semester 1","url":"/CSIT/Semester-1/CSIT/IIT/Notes/","content":"\n# SKM Subject Study Materials - IIT Semester 1\n\n## Unit 1: Introduction to Computers\nHere are the notes for **[Introduction to Computers](/downloads/CSIT/Sem1/IIT/Unit-1.pdf)**, which covers the basics of computer science, including the history, characteristics, and classifications of computers. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/Unit-1.pdf\"\n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n\n**Description**:  \nThis unit introduces the concept of computers, covering their basic definition, history, and evolution over time. It also discusses the different generations of computers and how they are classified based on size, capacity, and applications.\n\n---\n\n## Unit 2: The Computer System Hardware\nIn **[The Computer System Hardware](/downloads/CSIT/Sem1/IIT/Unit-2.pdf)**, we explore the internal hardware components of a computer system. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/Unit-2.pdf\"\n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit dives deep into the essential components of computer hardware such as the CPU, memory, storage devices, and input/output devices. It explains the functions of each hardware component and how they work together in a computer system.\n\n---\n\n## Unit 3: Computer Memory\nIn [The Computer System Hardware](/downloads/CSIT/Sem1/IIT/Unit-3.pdf), we cover the different types of memory used in computers. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/Unit-3.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nMemory is a critical component in a computer system. This unit focuses on the different types of memory, including primary memory (RAM), secondary memory (hard drives, SSDs), and cache memory. It explains how each type of memory works and their roles in a computer system.\n\n---\n\n\n## Unit 4: Input and Output Devices\nIn [Input and Output Devices](/downloads/CSIT/Sem1/IIT/Unit-4.pdf), we explore the various input and output devices used in computers. You can view the full PDF below:\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/Unit-4.pdf\"\n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers all major input and output devices used in computers, including keyboards, mice, monitors, printers, and scanners. It discusses how each device communicates with the computer system and its role in data processing.\n\n---\n<!---\n## Unit 5: Data Representation\n**Unit 5: Data Representation** explores how data is represented inside a computer system. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-5.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit focuses on how data is represented in binary form within a computer system. It explains concepts like binary numbers, ASCII encoding, and how computers process different types of data such as text, images, and audio.\n\n---\n\n## Unit 6: Computer Software\n**Unit 6: Computer Software** introduces the different types of software that make computers functional. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-6.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers the two main types of computer software: system software (like operating systems) and application software (like word processors, browsers, and games). It explains the role of software in making hardware usable and facilitating user tasks.\n\n---\n\n## Unit 7: Data Communication and Computer Networks\n**Unit 7: Data Communication and Computer Networks** covers the fundamentals of data transmission and networking. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-7.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit explains how data is transmitted over communication channels and how networks are set up. It discusses network topologies, protocols, and types of networks such as LAN, WAN, and the internet.\n\n---\n\n## Unit 8: The Internet and Internet Services\n**Unit 8: The Internet and Internet Services** explores how the internet functions and the different services available online. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-8.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nIn this unit, we explore the working of the internet, web technologies, and internet services like email, VoIP, and cloud computing. It also covers concepts such as IP addresses, DNS, and HTTP.\n\n---\n\n## Unit 9: Fundamentals of Databases\n**Unit 9: Fundamentals of Databases** introduces the concepts of database management systems. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-9.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers the basics of database systems, including relational databases, SQL, and data models. It explains how databases are used to store, manage, and retrieve data efficiently.\n\n---\n\n## Unit 10: Multimedia\n**Unit 10: Multimedia** discusses how multimedia technologies work, from audio and video to graphics and animations. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-10.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit explains multimedia content and how it is used in computing. It covers digital images, sound, and video, and introduces multimedia software and technologies like video editing and streaming.\n\n---\n\n## Unit 11: Computer Security\n**Unit 11: Computer Security** introduces the principles of securing computer systems. You can view the full PDF below:\n\n<iframe \n    src=\"Unit-11.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit discusses the importance of computer security, including topics such as encryption, firewalls, antivirus software, and secure computing practices. It also covers common threats like malware and phishing.\n\n--- -->\n\n### About the Author\nCompiled by **Shiv Kumar Mahato**, B.Sc. CSIT Faculty at Patan Multiple Campus.\n","tags":["Notes","IIT","Slides"],"categories":["CSIT","Semester 1"]},{"title":"RISC vs CISC : IIT Sem1 Assignment","url":"/CSIT/Semester-1/CSIT/IIT/Assignment1/","content":"# RISC vs CISC: An IIT Assignment\n\n### RISC (Reduced Instruction Set Computing)\n\n#### Definition\nRISC is a CPU design architecture that utilizes a small set of simplified instructions, each executable within a single clock cycle, focusing on optimizing the execution of basic operations through register-to-register operations and a load-store memory access model.\n\n#### Key Features\n- Fixed-length instruction format\n- Single clock cycle execution per instruction\n- Load-store architecture\n- Large register set\n- Hardware-based pipelining\n- Register-to-register operations\n- Limited addressing modes\n\n#### Advantages\n1. Simplified hardware design\n2. Better instruction pipelining\n3. Lower power consumption\n4. Faster instruction execution\n5. Easier to implement and debug\n\n#### Disadvantages\n1. Requires more RAM for program storage\n2. More lines of code needed for complex operations\n3. Higher complexity in compiler design\n4. Limited instruction functionality\n5. Requires more registers\n\n### CISC (Complex Instruction Set Computing)\n\n#### Definition\nCISC is a CPU design architecture that implements a large set of complex instructions of varying lengths, capable of performing multi-step operations within a single instruction, with direct memory-to-memory operations support.\n\n#### Key Features\n- Variable-length instruction format\n- Multi-clock cycle instructions\n- Memory-to-memory operations\n- Smaller register set\n- Multiple addressing modes\n- Hardware-handled complexity\n- Microcode implementation\n\n#### Advantages\n1. Efficient memory usage\n2. Backward compatibility support\n3. Fewer lines of assembly code needed\n4. Direct memory-to-memory operations\n5. Complex operations in single instructions\n\n#### Disadvantages\n1. Complex decoder circuitry required\n2. Higher power consumption\n3. Longer instruction execution time\n4. More complex hardware design\n5. Difficult to implement efficient pipelining\n\n##       Detailed Comparison Table\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/risc-vs-cisc.pdf\"\n    width=\"100%\"\n    height=\"600px\">\n    >\n    </iframe>\n\n[Download PDF](/downloads/CSIT/Sem1/IIT/risc-vs-cisc.pdf)\n[Cover Page](/downloads/CSIT/Sem1/IIT/coverpage.pdf)\n","tags":["Assignment","IIT"],"categories":["CSIT","Semester 1"]},{"title":"C Programming Notes - CSIT Semester 1","url":"/Study-Materials/CSIT/Semester-1/CSIT/C-Programming/Notes/","content":"\n# C Programming - CSIT Semester 1\n\n## Unit 1: Problem Solving with Computer\nHere are the notes for **[Problem Solving with Computer](/downloads/CSIT/Sem1/CProgramming/Unit-1.pdf)**, which covers the basics of programming and problem-solving using computers. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-1.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit introduces the basics of programming, including the problem-solving process, the role of computers in problem-solving, and the importance of algorithms and pseudocode in programming. It also covers the C programming language and its syntax.\n\n---\n\n## Unit 2: Elements of C\nIn **[Elements of C](/downloads/CSIT/Sem1/CProgramming/Unit-2.pdf)**, we explore the fundamental elements of the C programming language. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-2.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers the basic elements of the C programming language, including data types, variables, constants, operators, and expressions. It also introduces the concept of functions and how to declare and define them.\n\n---\n\n## Unit 3: Input/Output\nIn **[Input/Output](/downloads/CSIT/Sem1/CProgramming/Unit-3.pdf)**, we dive into input and output operations in C. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-3.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers input and output operations in C programming. It explains how to use `scanf()` and `printf()` functions for input and output, as well as the `getchar()` and `putchar()` functions for character input and output.\n\n---\n## Unit 4: Operators and expressions\n**[Operators and expressions](\"/downloads/CSIT/Sem1/CProgramming/Unit-4.pdf\")** explains how to use operators and expressions in C programming. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-4.pdf\"\n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers operators and expressions in C programming. It explains how to use operators for arithmetic, relational, logical, and bitwise operations. It also covers expressions and how to evaluate them.\n\n---\n\n<!--\n## Unit 5: Arrays\n**[Arrays](/downloads/CSIT/Sem1/CProgramming/Unit-5.pdf)** covers the basics of arrays in C, how to define and manipulate them. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-5.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit explains arrays in C, both single-dimensional and multi-dimensional. It covers declaring arrays, accessing array elements, and performing operations on arrays such as sorting and searching.\n\n---\n\n## Unit 6: Strings\n**[Strings](/downloads/CSIT/Sem1/CProgramming/Unit-6.pdf)** explains string manipulation in C, including string operations and functions. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-6.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers strings in C, explaining how strings are represented in memory and how to perform common string operations like concatenation, comparison, and finding the length of strings.\n\n---\n\n## Unit 7: Pointers\n**[Pointers](/downloads/CSIT/Sem1/CProgramming/Unit-7.pdf)** explores the concept of pointers, their syntax, and applications in C programming. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-7.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit explains pointers in C, including how to declare pointers, use pointer arithmetic, and pass pointers to functions. It also covers dynamic memory allocation using `malloc()` and `free()`.\n\n---\n\n## Unit 8: Structures and Unions\n**[Structures and Unions](/downloads/CSIT/Sem1/CProgramming/Unit-8.pdf)** introduces the concept of structures and unions in C programming. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-8.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit introduces structures and unions in C, explaining how they are used to group different data types. It covers the syntax and uses of structures and unions for organizing data in complex programs.\n\n---\n\n## Unit 9: File Handling\n**[File Handling](/downloads/CSIT/Sem1/CProgramming/Unit-9.pdf)** covers how to work with files in C programming. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-9.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit introduces file handling in C, covering how to open, read, write, and close files using file pointers. It includes operations like text file handling and binary file handling.\n\n---\n\n## Unit 10: Dynamic Memory Allocation\n**[Dynamic Memory Allocation](/downloads/CSIT/Sem1/CProgramming/Unit-10.pdf)** explains memory management in C using functions like `malloc()`, `calloc()`, `realloc()`, and `free()`. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-10.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit covers dynamic memory allocation in C. It explains how to allocate and deallocate memory during runtime using various memory management functions. Topics also include managing memory in complex data structures like linked lists.\n\n---\n\n## Unit 11: C Preprocessor\n**[C Preprocessor](/downloads/CSIT/Sem1/CProgramming/Unit-11.pdf)** introduces preprocessor directives in C, such as `#define`, `#include`, and `#ifdef`. You can view the full PDF below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/CProgramming/Unit-11.pdf\" \n    width=\"100%\" \n    height=\"600px\">\n</iframe>\n\n**Description**:  \nThis unit explains the C preprocessor, covering preprocessor directives such as macros, conditional compilation, and file inclusion. It focuses on how the preprocessor modifies the code before compilation.\n-->\n---\n\n### About the Author\nCompiled by Hemanta GC, B.Sc. CSIT Faculty at Patan Multiple Campus.\n\n---","tags":["CSIT","Semester 1","C Programming","Notes"],"categories":["Study Materials","CSIT","Semester 1"]},{"title":"Computer Fundamentals - Book by Anita Goel","url":"/Study-Materials/csit/CSIT/IIT/Book/","content":"\n# Computer Fundamentals - By Anita Goel\n\nThis is the full book on **Computer Fundamentals** by **Anita Goel**, which covers the basic principles of computing, hardware, software, data storage, and more. The book is a valuable resource for students in the field of computer science and information technology.\n\nYou can read the entire book below:\n\n<iframe \n    src=\"/downloads/CSIT/Sem1/IIT/computer+fundamentals+by+anita+goel+full+book.pdf\" \n    width=\"100%\" \n    height=\"800px\">\n</iframe>\n\n---\n\n## Description\nThis book provides a comprehensive introduction to computer fundamentals. It covers a variety of topics including:\n\n- Basic Computer Organization\n- Hardware and Software Components\n- Input/Output Devices\n- Memory Systems and Storage\n- Operating Systems and File Management\n- Computer Networks and Internet\n- Basic Programming Concepts\n\n**Author**: Anita Goel  \n**Publisher**: Pearson Education India\n\n---\n\n## Credit\nThis book is copyrighted and belongs to **Anita Goel**, who has made significant contributions to the field of computer science education. The book is being provided here for educational purposes. Please support the author and publisher by purchasing an official copy if possible.\n\n---\n\n### About the Author\n**Anita Goel** is a renowned author and educator in the field of computer science. She has written several books on computer fundamentals and technology that have helped shape the understanding of computing concepts for students worldwide.\n\n---\n\n### Notes:\n- The book is hosted in **PDF format** for easy online viewing.\n- If you prefer to download the book, you can use the download link below:\n  \n  **[Download PDF](/downloads/CSIT/Sem1/IIT/computer+fundamentals+by+anita+goel+full+book.pdf)**\n","tags":["CSIT","IIT","Book"],"categories":["Study Materials","csit"]},{"title":"Course Details - IIT Sem 1 (CSC109)","url":"/Course-Details/CSIT/Semester-1/CSIT/IIT/Course-details/","content":"\n# Introduction to Information Technology\n\n**Course Title**: Introduction to Information Technology  \n**Course No**: CSC109  \n**Full Marks**: 60 + 20 + 20  \n**Pass Marks**: 24 + 8 + 8  \n**Nature of the Course**: Theory + Lab  \n**Credit Hours**: 3  \n**Semester**: I  \n\n## Course Description\nThis course covers the basic concepts of computers and information technology, including:\n- Introduction to computers\n- Hardware and software components\n- Memory, input/output systems\n- Data representation and database systems\n- Computer networks and data communication\n- The internet and its services\n- Multimedia technologies\n- Computer security principles\n\nThe main objective is to provide students with fundamental knowledge of computers and how they are used in modern-day information systems.\n\n---\n\n## Course Objectives\n- Understand the fundamental concepts of computers and information technology.\n- Gain practical knowledge of the functioning and components of a computer system.\n- Learn how to use essential software tools and applications for daily tasks.\n- Get acquainted with modern technologies like databases, networks, and internet services.\n\n---\n\n## Detailed Syllabus\n\n### Unit 1: Introduction to Computers\n- **Teaching Hours**: 3\n- **Content**:\n  - Definition and uses of computers\n  - Digital and analog computers\n  - Characteristics of computers\n  - History of computers and their generations\n  - Classification of computers based on size and type\n  - The computer system: hardware, software, data, and users\n\n**[Download Unit 1 PDF](/downloads/CSIT/Sem1/IIT/Unit-1.pdf)**\n\n### Unit 2: The Computer System Hardware\n- **Teaching Hours**: 3\n- **Content**:\n  - Introduction to hardware components\n  - Central Processing Unit (CPU) and its functions\n  - Memory unit (primary and secondary)\n  - Instruction cycle and instruction set\n  - Interconnecting the computer units\n\n**[Download Unit 2 PDF](/downloads/CSIT/Sem1/IIT/Unit-2.pdf)**\n\n### Unit 3: Computer Memory\n- **Teaching Hours**: 4\n- **Content**:\n  - Types of memory: primary, secondary, and cache memory\n  - Memory hierarchy\n  - Different storage devices and their functions\n\n**[Download Unit 3 PDF](/downloads/CSIT/Sem1/IIT/Unit-3.pdf)**\n\n### Unit 4: Input and Output Devices\n- **Teaching Hours**: 4\n- **Content**:\n  - Overview of input and output devices\n  - Types of human data entry and source data entry devices\n  - Output devices: hard copy and soft copy\n  - Working of the I/O system\n\n<!-- **[Download Unit 4 PDF](pdfs/csit/sem-1/iit/unit4-input-output-devices.pdf)** -->\n\n### Unit 5: Data Representation\n- **Teaching Hours**: 6\n- **Content**:\n  - Introduction to number systems\n  - Conversion between decimal, binary, octal, and hexadecimal\n  - Binary arithmetic, signed/unsigned numbers\n  - Binary data representation and logic gates\n\n<!-- **[Download Unit 5 PDF](pdfs/csit/sem-1/iit/unit5-data-representation.pdf)** -->\n\n### Unit 6: Computer Software\n- **Teaching Hours**: 6\n- **Content**:\n  - Definition and types of software\n  - System software and application software\n  - Introduction to operating systems and their functions\n\n<!-- **[Download Unit 6 PDF](pdfs/csit/sem-1/iit/unit6-computer-software.pdf)** -->\n\n### Unit 7: Data Communication and Computer Networks\n- **Teaching Hours**: 5\n- **Content**:\n  - Introduction to data communication and networking\n  - Types of transmission media and network topologies\n  - Communication protocols and networking devices\n\n<!-- **[Download Unit 7 PDF](pdfs/csit/sem-1/iit/unit7-data-communication-and-computer-networks.pdf)** -->\n\n### Unit 8: The Internet and Internet Services\n- **Teaching Hours**: 4\n- **Content**:\n  - Overview of the internet and its history\n  - Internet protocols (TCP/IP) and addressing\n  - Internet services like WWW, Email, and FTP\n  - IoT, Cloud Computing, and e-commerce\n\n<!-- **[Download Unit 8 PDF](pdfs/csit/sem-1/iit/unit8-internet-and-internet-services.pdf)** -->\n\n### Unit 9: Fundamentals of Database\n- **Teaching Hours**: 4\n- **Content**:\n  - Introduction to databases and their components\n  - Database models (E-R model and relational model)\n  - DBMS concepts, data warehousing, and Big Data\n\n<!-- **[Download Unit 9 PDF](pdfs/csit/sem-1/iit/unit9-fundamentals-of-database.pdf)** -->\n\n### Unit 10: Multimedia\n- **Teaching Hours**: 3\n- **Content**:\n  - Introduction to multimedia elements: text, graphics, audio, video, and animation\n  - Applications of multimedia\n\n<!-- **[Download Unit 10 PDF](pdfs/csit/sem-1/iit/unit10-multimedia.pdf)** -->\n\n### Unit 11: Computer Security\n- **Teaching Hours**: 3\n- **Content**:\n  - Security threats and malicious software\n  - Cryptography, digital signatures, firewalls\n  - User authentication and intrusion detection systems\n\n<!-- **[Download Unit 11 PDF](pdfs/csit/sem-1/iit/unit11-computer-security.pdf)** -->\n\n---\n\n## Text Books:\n1. **Computer Fundamentals**, Anita Goel, Pearson Education India\n2. **Introduction to Computers**, Peter Norton, 7th Edition, McGraw Hill Education\n\n## Reference Books:\n1. **Computer Fundamentals**, Pradeep K. Sinha and Priti Sinha\n2. **Data Mining Concepts and Techniques**, Third Edition, Jiawei Han, Micheline Kamber, and Jian Pei\n3. **Cloud Computing Bible**, Barrie Sosinsky, Wiley\n\n---\n\n## Laboratory Works:\n- Demonstration of different hardware components\n- Hands-on experience with operating systems (Windows, Linux, DOS)\n- Working with Word Processors, Spreadsheets, and Presentation Software\n- Database management system practice\n- Internet and web browser use\n\n---\n\n## Model Question Paper\n**Course Title**: Introduction to Information Technology  \n**Full Marks**: 60  \n**Pass Marks**: 24  \n\n### Section A (2 × 10 = 20)\n1. What is an operating system? Discuss different functions of an operating system in detail.\n2. Why do we need a computer network? Discuss different types of network topologies along with their merits and demerits.\n\n### Section B (8 × 5 = 40)\n1. Discuss the characteristics of the third generation of computers. Compare it with the fourth generation.\n2. Discuss the components of the CPU.\n3. What is primary memory? Discuss different types of primary memory.\n4. Define hard-copy and soft-copy output. Differentiate between impact and non-impact printers.\n5. Convert (AF7)₁₆ to binary. Subtract (1001101)₂ from (1100011)₂.\n6. Define IP address with an example. What are the benefits of using a domain name?\n7. What are the characteristics of multimedia?\n8. Define cryptography. Discuss public key cryptography in detail.\n9. Write short notes on:\n   - BigData\n   - E-governance\n\n---\n\n**[Download IIT Course Details PDF](/downloads/CSIT/Sem1/IIT/IIT-course-details-sem1.pdf)**\n\n","tags":["CSIT","Semester 1","IIT","Syllabus","CSC109","Model Question Paper"],"categories":["Course Details","CSIT","Semester 1"]}]